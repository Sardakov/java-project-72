DROP TABLE IF EXISTS url_checks;
DROP TABLE IF EXISTS urls;

CREATE TABLE urls (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    createdAt TIMESTAMP
);

CREATE TABLE url_checks (
    id INT PRIMARY KEY AUTO_INCREMENT,
    url_id INT REFERENCES urls(id) ON DELETE CASCADE,
    statusCode INT,
    title VARCHAR(255),
    h1 VARCHAR(255),
    description TEXT,
    createdAt TIMESTAMP
);

--INSERT INTO urls (name, createdAt) VALUES ('https://example1.com', NOW());
--INSERT INTO urls (name, createdAt) VALUES ('https://example2.com', NOW());
--
--INSERT INTO url_checks (url_id, statusCode, title, h1, description, createdAt)
--VALUES (1, 200, 'Title 1', 'H1 Text 1', 'Description for first check', NOW());
--
--INSERT INTO url_checks (url_id, statusCode, title, h1, description, createdAt)
--VALUES (1, 404, 'Title 2', 'H1 Text 2', 'Description for second check', NOW());
--
--INSERT INTO url_checks (url_id, statusCode, title, h1, description, createdAt)
--VALUES (1, 500, 'Title 3', 'H1 Text 3', 'Description for third check', NOW());
--
---- Для URL с id 2 (https://example2.com)
--INSERT INTO url_checks (url_id, statusCode, title, h1, description, createdAt)
--VALUES (2, 200, 'Title A', 'H1 Text A', 'Description for first check', NOW());
--
--INSERT INTO url_checks (url_id, statusCode, title, h1, description, createdAt)
--VALUES (2, 301, 'Title B', 'H1 Text B', 'Description for second check', NOW());
--
--INSERT INTO url_checks (url_id, statusCode, title, h1, description, createdAt)
--VALUES (2, 403, 'Title C', 'H1 Text C', 'Description for third check', NOW());




--
--create table urls (
--  id                            bigint generated by default as identity not null,
--  name                          varchar(255),
--  createdAt                    timestamp not null,
--  constraint pk_urls primary key (id)
--);
--
--create table url_checks (
--  id                            bigint generated by default as identity not null,
--  url_id                        bigint not null,
--  statusCode                   integer,
--  title                         varchar(255),
--  h1                            varchar(255),
--  description                   clob,
--  createdAt                    timestamp not null,
--  constraint pk_url_checks primary key (id)
--);
--
---- foreign keys and indices
--create index ix_url_checks_url_id on url_checks (url_id);
--alter table url_checks add constraint fk_url_checks_url_id foreign key (url_id) references urls (id) on delete restrict on update restrict;
--
--
--
